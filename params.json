{"name":"Oracle Application Level Encryption-Decryption","tagline":"Oracle based application level Encryption and Decryption utilities for 10g and 11g(AES enabled)","body":"#Installation process\r\n1. Please place all the source code files provided in one single location ( preferably a single directory).\r\nCheck if you need the 11g source code or the base 10g code. Keep only one set to avoid confusion.\r\n  * error_log.ddl\r\n  * ex_crypto_pkg.ddl\r\n  * ex_crypto_pkg_body.ddl\r\n  * run_before_install.sql\r\n\r\n2. Execute the file : run_before_install.sql to verify that there is no conflict with an existing object in your database.\r\nIf there are any objects in the list generated by script then you may wish to manually inspect the DB object(s) before executing the next steps to avoid any data / object loss.\r\n\r\n3. Compile the script : error_log.ddl \r\nThe script expects tablespace named 'ext_data_ts' to be present and accessible. \r\nPlease replace the same with appropriate tablespace name OR remove the tablespace clause as applicable.\r\n\r\n   >E.g. : from unix prompt - after logging into oracle , fire the command\r\n   `@error_log.ddl`\r\n\r\n4. Compile the script : ex_crypto_pkg.ddl\r\n   >E.g. : from unix prompt - after logging into oracle, fire the command\r\n   `@ex_crypto_pkg.ddl`\r\n\r\n5. Execute wrap utility for hiding the source text in database reference tables : \r\n   > E.g : In a unix box , which has oracle connectivity defined (i.e. $ORACLE, $TNS_HOME etc. are defined) execute this command\r\n   `wrap iname=ex_crypto_pkg_body.ddl`\r\n\r\n   This will generate a file named : ex_crypto_pkg_body.plb\r\n\r\n   > Compile this file as usual : \r\n   > E.g : from unix prompt - after logging into oracle , fire the command\r\n   `@ ex_crypto_pkg_body.plb`\r\n\r\n6. Verify that the encryption package is working properly by using the sample below:\r\n\r\n   `SELECT ex_crypto.f_decrypt(ex_crypto.f_encrypt('Exilant Technologies Pvt. Ltd.')) FROM DUAL;`\r\n\r\n   This command will validate both encryption and decryption functions. For detailed function list , please refer to Usage Instructions.\r\n\r\n7. Delete the source file(s) by removing them manually (so as to not to expose the logic to even DBA) :\r\n  * ex_crypto_pkg.ddl\r\n  * ex_crypto_pkg_body.ddl\r\n  * ex_crypto_pkg_body.plb\r\n\r\n\r\n***\r\n##Uninstall process:\r\n> Please ensure that the error log table and logging procedure don't have any other dependency or are getting used anywhere.\r\n> Also, it is suggested to take a backup of error log table , in case the error logging module is to be used separately.\r\n\r\nCompile the script :\r\n`@uninstall_encryption.sql`\r\n\r\nThis will systematically remove all components installed as part of the crypto module.\r\n\r\n","google":"UA-24745261-1","note":"Don't delete this file! It's used internally to help with page regeneration."}