/*----------------------------------------------------------------------------------------
-- FILE NAME        : ex_crypto_pkg_body.sql
-- Generated By     : Ex!lant Technologies Pvt Ltd.
-- Description      : Package body for ex_crypto Oracle based 3DES encryption and 
--                    decryption utilities
-- Date             : May 18, 2012
-- Author           : Ex!lant Development Team
-- Modification History:
------------------------------------------------------------------------------------------
--      When            Who                     What
------------------------------------------------------------------------------------------
--      18/05/2012      Ex! Dev Team            Initial Version
----------------------------------------------------------------------------------------*/
CREATE OR REPLACE PACKAGE BODY ex_crypto
AS
    PROCEDURE p_round8( in_v_string IN OUT VARCHAR2)
    IS
    ln_str_len PLS_INTEGER;
    BEGIN
        SELECT VSIZE(TRIM(in_v_string)) INTO ln_str_len FROM DUAL;
        CASE 
            WHEN MOD(ln_str_len,8)= 0 THEN in_v_string := TRIM(in_v_string);
            ELSE in_v_string := LPAD(TRIM(in_v_string), 8 - MOD(ln_str_len,8) + LENGTH(TRIM(in_v_string)));
        END CASE;
                          
    EXCEPTION 
    WHEN OTHERS THEN
        gv_pgm_nm := 'p_round8';
        gv_err_msg := 'Error occurred while processing input string :'||in_v_string;
        p_log_error(gv_err_msg, gv_pgm_nm);
        in_v_string := NULL;
    END p_round8 ;

    FUNCTION f_string_encrypt( in_encrypt IN VARCHAR2, in_n_3des_flag IN PLS_INTEGER DEFAULT 0)
    RETURN VARCHAR2
    IS
    BEGIN
        gv_pgm_nm := 'f_string_encrypt';
        gv_encryption_key := 'Ex!l@n8Te3hn0l0giesPr1v@8L1m1teD';
        gv_encryption_key := gv_encryption_key||'EnCryPt10NAlg0Rdm7860666';
        gv_string := TRIM(in_encrypt);

        IF gv_string IS NULL THEN
            RAISE ge_null_input;
        ELSIF in_n_3des_flag > 1 THEN
            RAISE ge_invalid_key;
        ELSE
           p_round8(gv_string);
           DBMS_OBFUSCATION_TOOLKIT.DES3Encrypt(input_string => gv_string,
                                                key_string => gv_encryption_key,
                                                encrypted_string => gv_o_encrypted_string,
                                                which => in_n_3des_flag);
        END IF;
        RETURN gv_o_encrypted_string;
    EXCEPTION
        WHEN ge_null_input THEN
            gv_err_msg := 'NULL Input string provided';
            p_log_error(gv_err_msg, gv_pgm_nm);
            RETURN NULL;
        WHEN ge_invalid_key THEN
            gv_err_msg := 'Invalid WHICH key provided for input string :'||in_encrypt||' AND 3DES '||in_n_3des_flag;
            p_log_error(gv_err_msg, gv_pgm_nm);
            RETURN NULL;
        WHEN OTHERS THEN
            gv_err_msg := 'Error occurred while processing input string :'||in_encrypt||' AND 3DES '||in_n_3des_flag;
            p_log_error(gv_err_msg, gv_pgm_nm);
            RETURN NULL;
    END f_string_encrypt; 

    FUNCTION f_encrypt(in_encrypt IN NUMBER, in_n_3des_flag IN PLS_INTEGER DEFAULT 0)
    RETURN VARCHAR2
    IS
    BEGIN
        RETURN f_string_encrypt(TO_CHAR(in_encrypt),in_n_3des_flag);
    EXCEPTION
        WHEN OTHERS THEN
            gv_pgm_nm := 'f_encrypt';
            gv_err_msg := 'Error occurred while processing input NUMBER :'||in_encrypt||' AND 3DES '||in_n_3des_flag;
            p_log_error(gv_err_msg, gv_pgm_nm);
            RETURN NULL;
    END f_encrypt;

    FUNCTION f_encrypt( in_encrypt IN VARCHAR2, in_n_3des_flag IN PLS_INTEGER DEFAULT 0)
    RETURN VARCHAR2
    IS
    BEGIN
        RETURN f_string_encrypt(in_encrypt,in_n_3des_flag);
    END f_encrypt;
    
    FUNCTION f_encrypt_raw(in_encrypt IN RAW, in_n_3des_flag IN PLS_INTEGER DEFAULT 0)
    RETURN RAW 
    IS
    BEGIN
        RETURN UTL_RAW.CAST_TO_RAW(f_string_encrypt(UTL_RAW.CAST_TO_VARCHAR2(TRIM(in_encrypt)),in_n_3des_flag));
     EXCEPTION   
        WHEN OTHERS THEN
            gv_pgm_nm := 'f_encrypt_raw';
            gv_err_msg := 'Error occurred while processing input RAW string :'||in_encrypt||' AND 3DES '||in_n_3des_flag;
            p_log_error(gv_err_msg, gv_pgm_nm);
            RETURN NULL;      
    END f_encrypt_raw;

    FUNCTION f_string_decrypt ( in_decrypt IN VARCHAR2, in_n_3des_flag IN PLS_INTEGER DEFAULT 0) 
    RETURN VARCHAR2
    IS
    BEGIN
        gv_pgm_nm := 'f_string_decrypt';
        gv_encryption_key := 'Ex!l@n8Te3hn0l0giesPr1v@8L1m1teD';
        gv_encryption_key := gv_encryption_key||'EnCryPt10NAlg0Rdm7860666';

        IF TRIM(in_decrypt) IS NULL THEN
            RAISE ge_null_input;
        ELSIF in_n_3des_flag > 1 THEN
            RAISE ge_invalid_key;
        ELSE
           DBMS_OBFUSCATION_TOOLKIT.DES3Decrypt(input_string => in_decrypt,
                                                key_string => gv_encryption_key,
                                                decrypted_string => gv_o_decrypted_string,
                                                which => in_n_3des_flag);
        END IF;
        RETURN TRIM(gv_o_decrypted_string);
    EXCEPTION
        WHEN ge_null_input THEN
            gv_err_msg := 'NULL Input Decryption string provided';
            p_log_error(gv_err_msg, gv_pgm_nm);
            RETURN NULL;
        WHEN ge_invalid_key THEN
            gv_err_msg := 'Invalid WHICH key provided for input string :'||in_decrypt||' AND 3DES '||in_n_3des_flag;
            p_log_error(gv_err_msg, gv_pgm_nm);
            RETURN NULL;
        WHEN OTHERS THEN
            gv_err_msg := 'Error occurred while processing input string :'||in_decrypt||' AND 3DES '||in_n_3des_flag;
            p_log_error(gv_err_msg, gv_pgm_nm);
            RETURN NULL;
    END f_string_decrypt;
    
    FUNCTION f_decrypt( in_decrypt IN VARCHAR2, in_n_3des_flag IN PLS_INTEGER DEFAULT 0) 
    RETURN VARCHAR2
    IS
    BEGIN
        RETURN f_string_decrypt (in_decrypt, in_n_3des_flag);
    EXCEPTION
        WHEN OTHERS THEN
            gv_pgm_nm := 'f_decrypt';
            gv_err_msg := 'Error occurred while processing input STRING :'||in_decrypt||' AND 3DES '||in_n_3des_flag;
            p_log_error(gv_err_msg, gv_pgm_nm);
            RETURN NULL;
    END f_decrypt;

    FUNCTION f_decrypt_raw ( in_decrypt IN RAW, in_n_3des_flag IN PLS_INTEGER DEFAULT 0) 
    RETURN RAW
    IS
    BEGIN
        RETURN UTL_RAW.CAST_TO_RAW(f_string_decrypt(UTL_RAW.CAST_TO_VARCHAR2(in_decrypt),in_n_3des_flag));
    EXCEPTION
        WHEN OTHERS THEN
            gv_pgm_nm := 'f_decrypt_raw';
            gv_err_msg := 'Error occurred while processing input RAW string :'||in_decrypt||' AND 3DES '||in_n_3des_flag;
            p_log_error(gv_err_msg, gv_pgm_nm);
            RETURN NULL;
    END f_decrypt_raw;

END ex_crypto; 
/

